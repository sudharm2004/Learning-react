1)What is npm?
NPM is central online repository for javascript packages.
It helps to use and share packages easily.
NPM helps to manage packages and their dependencies in your project for eg:- you have 2-3 dependencies in your package.json so it will
download all those dependencies when you run <npm i> and also download the dependencies required for the dependencies in your package.json.
https://www.uxpin.com/studio/blog/what-is-npm/

2)How does npm install npm packages?
When you run the command npm i <package-name> in your command-line interface, npm first checks if the package you're trying to download is already present in your local machine's cache. If it is, it will use the version from the cache and won't download it again. If it's not present in the cache, npm will connect to the npm registry, which is a central repository of packages available on npm.
When npm connects to the registry, it sends a request for the package specified in the command. The registry then searches its database for the package and returns the package information, including the version, author, and dependencies, to npm.
If the package is found in the registry, npm will download the package from the registry to your local machine, and then install it in the project's node_modules directory. If the package has any dependencies, npm will also download and install those packages in the node_modules directory, recursively.
Once the package is downloaded and installed, npm will also update the project's package.json file to include the package as a dependency.
It's worth noting that npm packages are distributed as tarballs, which are compressed files that include the package's source code, as well as a package.json file with metadata about the package. npm will extract the tarball and place the package's files in the node_modules directory, making it available to your project.

3)package.json vs package-lock.json
package.json is a file that contains metadata about a project, including its name, version, author, and a list of dependencies. When you run the command npm init, npm will create a package.json file in the project's root directory. It also includes the scripts which can be run on the command line by using npm run <script name>.
package-lock.json, on the other hand, is a file that is automatically generated by npm when a project's dependencies are installed. It contains a detailed, versioned list of all the packages and their dependencies that are installed in the project. It also includes the version of the package installed, the location from where it was installed and the package's hash, which is a unique identifier that ensures that the package has not been tampered with.

PACKAGE-LOCK.JSON USE-CASE:-
With package-lock.json, when a developer runs npm install, npm will check the package-lock.json file and install the exact versions of packages that are specified in the file. This ensures that all developers are using the same versions of packages, regardless of which package manager they are using or which version of npm they have installed.

4)What does npm checks when you run npm install command?
 after running the command npm install, npm will check both package.json and package-lock.json files, if the package-lock.json is present, it will use that file to determine which versions of packages to install, and if not, it will use the version specified in the package.json file. It will then install or update the packages as necessary and update the package-lock.json file to ensure that the correct versions of packages are specified.

5)What is parcel/Webpack?Why do we need it? 
Parcel or webpack are the bundlers.
Bundlers:-
A bundler is a development tool that combines many JavaScript code files into a single one that is production-ready loadable in the browser. A fantastic feature of a bundler is that it generates a dependency graph as it traverses your first code files.
This implies that beginning with the entry point you specified, the module bundler keeps track of both your source filesâ€™ dependencies and third-party dependencies. This dependency graph guarantees that all source and associated code files are kept up to date and error-free.
VIDEO REFERENCE :- https://youtu.be/3UWlufSzO4k

6)what is difference between main and source in package.json?
 the main field is used to specify the primary JavaScript file that should be executed when the package is imported or required, it's used by package manager to run the package. The source field is used to specify the source code of the package, it's less common than the main field and it's not used by the package manager to execute the package but it's used by some other tools to understand the package source code.

 7)Superpowers of parcel?
 Parcel advantages:-
0)
1) bundling our code
2)minifying the code
3)removing all the console log(cleaning the code)
4)it does image optimization(compress them)
5)it provides caching while development->The time required to build development build first is largest and subsequently the time required decreases
6)It compresses your files(decreases the size of your js,html,css files). for eg:-it changes names of your variables (with large names )in js to some small names like alphabets/something.
7)It also handles compatability with older versions.
8)It enables https on development build.
9)It manages your port number.
10)It uses consistent hashing algorithm.
11)It has zero configuration.
